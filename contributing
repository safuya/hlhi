# Introduction

Thanks for considering contributing to this project! If you can think of awesome ways to extend this basic tool, I would be extremely grateful.

Following these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests.

Keep an open mind! Improving documentation, bug triaging, or writing tutorials are all examples of helpful contributions that mean less work for you.

You may use the issue tracker for any questions or comments, as long as they're respectful.

# Ground Rules

Responsibilities
* Ensure cross-platform compatibility for every change that's accepted. Windows, Mac & Ubuntu Linux.
* Ensure that code passes pyflake checks.
* Create issues for any major changes and enhancements that you wish to make. Discuss things transparently and get community feedback.
* Don't add any classes to the codebase unless absolutely needed. Err on the side of using functions.
* Keep merge requests as small as possible, only one new feature per merge.
* Be welcoming to newcomers and encourage diverse new contributors from all backgrounds. See the [Python Community Code of Conduct](https://www.python.org/psf/codeofconduct/).

# Your First Contribution
Don't be afraid to ask for help if you're new to coding. This is a beginner friendly project, and I'll do my best to help you add features.

Unsure where to begin contributing to HLHI? You can start by looking through these beginner and help-wanted issues:
Beginner issues - issues which should only require a few lines of code, and a test or two.
Help wanted issues - issues which should be a bit more involved than beginner issues.
Both issue lists are sorted by total number of comments. While not perfect, number of comments is a reasonable proxy for impact a given change will have.

If a maintainer asks you to "rebase" your PR, they're saying that a lot of code has changed, and that you need to update your branch so it's easier to merge.

# Getting started
### Give them a quick walkthrough of how to submit a contribution.

>For something that is bigger than a one or two line fix:

1. Comment on the issue that you're going to work on it.
1. Create your own fork of the code
1. Do the changes in your fork
1. If you like the change and think the project could use it:
    * Be sure you have followed the code style for the project.
    * Note the Code of Conduct.
    * Send a pull request.

# How to report a bug

If you find a security vulnerability, do NOT open an issue. Email roberts dot ginger dot email at gmail dot com instead.

In order to determine whether you are dealing with a security issue, ask yourself these two questions:
* Can I access something that's not mine, or something I shouldn't have access to?
* Can I disable something for other people?
If the answer to either of those two questions are "yes", then you're probably dealing with a security issue. Note that even if you answer "no" to both questions, you may still be dealing with a security issue, so if you're unsure, just email us.

When filing an issue, make sure to answer these five questions:
1. What version of Python are you using (python --version)?
1. What operating system and processor architecture are you using?
1. What did you do?
1. What did you expect to see?
1. What did you see instead?

# How to suggest a feature or enhancement

HLHI is aiming to provide small, robust tool for dealing with time differences.
HLHI does not expect users to install any additional Python packages, and will use the time on the users computer.

If you find yourself wishing for a feature that doesn't exist in HLHI, open an issue on our issues list on GitHub which describes the feature you would like to see, why you need it, and how it should work.

# Code review process

The core team looks at Pull Requests on when available. All discussions and decisions are carried out on GitHub issues.
After feedback has been given I expect responses within a month. After a month I may close the pull request if it isn't showing any activity.
